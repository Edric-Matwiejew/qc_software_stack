-- -*- lua -*-
help([[
CUDA-Q streamlines hybrid application development and promotes productivity and scalability in quantum computing. It offers a unified programming model designed for a hybrid settingâ€”that is, CPUs, GPUs, and QPUs working together. CUDA-Q contains support for programming in Python and in C++.
]])

whatis("Name: CUDA-Q")
whatis("Version: CUDAQVERSION")
whatis("CUDA Version: CUDAVERSION")
whatis("Python Version: PYTHONVERSION")
whatis("Documentation: https://nvidia.github.io/cuda-quantum")

if (not isloaded("nvhpc/NVHPCVERSION")) then
    load("nvhpc/NVHPCVERSION")
end
depends_on("nvhpc/NVHPCVERSION")

if (not isloaded("hpcx-mt-ompi")) then
    load("hpcx-mt-ompi")
end
depends_on("hpcx-mt-ompi")

if not isloaded("gcc/GCCVERSION") then
    load("gcc/GCCVERSION")
end
depends_on("gcc/GCCVERSION")

if not isloaded("python/PYTHONVERSION") then
    load("python/PYTHONVERSION")
end
depends_on("python/PYTHONVERSION")

if not isloaded("cuquantum/CUQUANTUMVERSION") then
    load("cuquantum/CUQUANTUMVERSION")
end
depends_on("cuquantum/CUQUANTUMVERSION")

setenv("CUDAQ_ROOT", "CUDAQROOT")
prepend_path("PYTHONPATH", "CUDAQROOT")

execute {cmd="source " .. "CUDAQROOT" .. "/set_env.sh", modeA={"load"}}
