-- -*- lua -*-
help([[
NVIDIA cuQUANTUM is a GPU-accelerated tensor linear algebra library for tensor contraction, reduction, and elementwise operations.
]])

whatis("Name: cuQUANTUM CUQUANTUMVERSION")
whatis("CUDA Version: CUDAVERSION")
whatis("Documentation: https://docs.nvidia.com/cuda/cuquantum/24.03.0/")

if not isloaded("gcc") then
    load("gcc")
end
depends_on("gcc")

if (not isloaded("nvhpc/NVHPCVERSION")) then
    load("nvhpc/NVHPCVERSION")
end
depends_on("nvhpc/NVHPCVERSION")

if (not isloaded("hpcx-mt-ompi")) then
    load("hpcx-mt-ompi")
end
depends_on("hpcx-mt-ompi")

if not isloaded("cutensor-12") then
    load("cutensor-12")
end
depends_on("cutensor-12")

local CUQUANTUM_ROOT = "CUQUANTUMROOT"

setenv("CUQUANTUM_ROOT", CUQUANTUM_ROOT)
setenv("CUTENSORNET_COMM_LIB", pathJoin(CUQUANTUM_ROOT, "distributed_interfaces/libcutensornet_distributed_mpi.so"))
prepend_path("LIBRARY_PATH", pathJoin(CUQUANTUM_ROOT, "lib/"))
prepend_path("LD_LIBRARY_PATH", pathJoin(CUQUANTUM_ROOT, "lib/"))
prepend_path("LD_LIBRARY_PATH", pathJoin(CUQUANTUM_ROOT, "distributed_interfaces/"))
prepend_path("CPATH", pathJoin(CUQUANTUM_ROOT, "include/"))
prepend_path("CMAKE_PREFIX_PATH", pathJoin(CUQUANTUM_ROOT, "lib/"))
prepend_path("CMAKE_PREFIX_PATH", pathJoin(CUQUANTUM_ROOT, "include/"))
prepend_path("CMAKE_PREFIX_PATH", pathJoin(CUQUANTUM_ROOT, "lib/"))

