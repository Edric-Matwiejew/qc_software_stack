-- -*- lua -*-
help([[
Spack is a package management tool designed to support multiple versions and configurations of software on a wide variety of platforms and environments.
]])

whatis("Name: Spack")
whatis("Version: SPACKVERSION")
whatis("Path: SPACKINSTALLPATH/bin/spack")

prereq("python/SPACKPYTHONVERSION")

local USER = os.getenv("USER")
local MYSOFTWARE = os.getenv("MYSOFTWARE")

local spack_path = "SPACKINSTALLPATH"
local SPACK_USER_CONFIG_PATH = "USERSPACKPATH"

-- setenv("SPACK_PYTHON", "SPACKPYTHON")
setenv("SPACK_USER_CONFIG_PATH", SPACK_USER_CONFIG_PATH)
setenv("SPACK_USER_CACHE_PATH", SPACK_USER_CONFIG_PATH)
setenv("TMPDIR", pathJoin("/tmp", USER))

local function create_directory(path)
    if not isDir(path) then
        local success = os.execute("mkdir -p " .. path)
        if not success then
            LmodError("Failed to create the directory: " .. path)
        end
    end
end

create_directory(SPACK_USER_CONFIG_PATH)
create_directory(pathJoin(SPACK_USER_CONFIG_PATH, "opt/spack"))
create_directory(pathJoin(SPACK_USER_CONFIG_PATH, "modules"))

execute {cmd="source " .. spack_path .. "/share/spack/setup-env.sh", modeA={"load"}}
