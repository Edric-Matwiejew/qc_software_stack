#%Module -*- tcl -*-
proc ModulesHelp { } {
    puts stderr "Spack is a package management tool designed to support multiple versions and configurations of software on a wide variety of platforms and environments."
}
module-whatis "Name: Spack"
module-whatis "Version: SPACKVERSION"
module-whatis "Path: SPACKINSTALLPATH/bin/spack"

prereq python/SPACKPYTHONVERSION

set USER [getenv USER]
set MYSOFTWARE [getenv MYSOFTWARE]

set spack_path "SPACKINSTALLPATH"
set SPACK_USER_CONFIG_PATH "USERSPACKPATH"

#setenv SPACK_PYTHON "SPACKPYTHON"
setenv SPACK_USER_CONFIG_PATH "USERSPACKPATH"
setenv SPACK_USER_CACHE_PATH "USERSPACKPATH"
setenv TMPDIR "/tmp/$USER"

if {![file exists $SPACK_USER_CONFIG_PATH]} {
    catch {exec mkdir -p $SPACK_USER_CONFIG_PATH} result
    if {![file exists $SPACK_USER_CONFIG_PATH]} {
        puts stderr "Failed to create the directory: $SPACK_USER_CONFIG_PATH"
        exit 1
    }
}

if {![file exists $SPACK_USER_CONFIG_PATH/opt/spack]} {
    catch {exec mkdir -p $SPACK_USER_CONFIG_PATH/opt/spack} result
    if {![file exists $SPACK_USER_CONFIG_PATH/opt/spack]} {
        puts stderr "Failed to create the directory: $SPACK_USER_CONFIG_PATH/opt/spack"
        exit 1
    }
}

if {![file exists $SPACK_USER_CONFIG_PATH/modules]} {
    catch {exec mkdir -p $SPACK_USER_CONFIG_PATH/modules} result
    if {![file exists $SPACK_USER_CONFIG_PATH/modules]} {
        puts stderr "Failed to create the directory: $SPACK_USER_CONFIG_PATH/modules"
        exit 1
    }
}

source-sh bash "SPACKINSTALLPATH/share/spack/setup-env.sh"
