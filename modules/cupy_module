-- -*- lua -*-
help([[
CuPy is a NumPy/SciPy-compatible array library for GPU-accelerated computing with Python.
]])

whatis("Name: cuQUANTUM CUPYVERSION")
whatis("CUDA Version: CUDAVERSION")
whatis("Documentation: https://docs.cupy.dev/")

if not isloaded("gcc") then
    load("gcc")
end
depends_on("gcc")

if (not isloaded("nvhpc/NVHPCVERSION")) and (not isloaded("nvhpc-openmpi3/NVHPCVERSION")) then
    load("nvhpc-openmpi3/NVHPCVERSION")
end
prereq_any("nvhpc/NVHPCVERSION", "nvhpc-openmpi3/NVHPCVERSION")

if not isloaded("python/PYTHONVERSION") then
    load("python/PYTHONVERSION")
end
depends_on("python/PYTHONVERSION")

local CUPY_ROOT = "CUPYROOT"
setenv("CUPY_ROOT", CUPY_ROOT)

-- Prepend necessary paths
prepend_path("PATH", pathJoin(CUPY_ROOT, "bin"))
prepend_path("LIBRARY_PATH", pathJoin(CUPY_ROOT, "lib/"))
prepend_path("LD_LIBRARY_PATH", pathJoin(CUPY_ROOT, "lib/"))
prepend_path("CPATH", pathJoin(CUPY_ROOT, "include/"))
prepend_path("CMAKE_PREFIX_PATH", pathJoin(CUPY_ROOT, "lib/"))
prepend_path("CMAKE_PREFIX_PATH", pathJoin(CUPY_ROOT, "include/"))
prepend_path("PYTHONPATH", pathJoin(CUPY_ROOT, "lib/pythonPYTHONVERSION_MAJOR_MINOR/site-packages"))
prepend_path("CUDA_PATH", "CUDAPATH")

